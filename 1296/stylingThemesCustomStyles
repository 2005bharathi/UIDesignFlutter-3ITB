import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
        primarySwatch: Colors.indigo,
        textTheme: TextTheme(
          bodyMedium: TextStyle(fontSize: 18, color: Colors.black87),
        ),
      ),
      home: Scaffold(
        appBar: AppBar(title: Text('Custom Progress Bar')),
        body: Center(
          child: ProgressBarExample(),
        ),
      ),
    );
  }
}

class ProgressBarExample extends StatefulWidget {
  @override
  _ProgressBarExampleState createState() => _ProgressBarExampleState();
}

class _ProgressBarExampleState extends State<ProgressBarExample> {
  double _progress = 0.0; // Initial progress value

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Text(
            'Progress: ${(_progress * 100).toInt()}%',
            style: Theme.of(context).textTheme.bodyMedium,
          ),
        ),
        CustomProgressBar(progress: _progress),
        SizedBox(height: 20),
        SliderTheme(
          data: SliderTheme.of(context).copyWith(
            activeTrackColor: Colors.indigo,
            inactiveTrackColor: Colors.indigo[100],
            thumbColor: Colors.indigoAccent,
            overlayColor: Colors.indigo.withOpacity(0.2),
            thumbShape: RoundSliderThumbShape(enabledThumbRadius: 12),
            overlayShape: RoundSliderOverlayShape(overlayRadius: 20),
          ),
          child: Slider(
            value: _progress,
            min: 0,
            max: 1,
            onChanged: (value) {
              setState(() {
                _progress = value;
              });
            },
          ),
        ),
      ],
    );
  }
}

class CustomProgressBar extends StatelessWidget {
  final double progress; // Progress value between 0.0 and 1.0

  const CustomProgressBar({Key? key, required this.progress}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      width: 300,
      height: 20,
      decoration: BoxDecoration(
        color: Colors.grey[300],
        borderRadius: BorderRadius.circular(10),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.2),
            blurRadius: 4,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Align(
        alignment: Alignment.centerLeft,
        child: FractionallySizedBox(
          widthFactor: progress, // Set the width based on the progress value
          child: Container(
            decoration: BoxDecoration(
              color: Colors.indigo, // Use theme primary color
              borderRadius: BorderRadius.circular(10),
            ),
          ),
        ),
      ),
    );
  }
}
